<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>parallel-programming on TWH @ Utah</title>
    <link>https://tsung-wei-huang.github.io/tags/parallel-programming/</link>
    <description>Recent content in parallel-programming on TWH @ Utah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Tsung-Wei Huang</copyright>
    <lastBuildDate>Fri, 01 Mar 2019 00:00:00 -0600</lastBuildDate>
    
	<atom:link href="https://tsung-wei-huang.github.io/tags/parallel-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cpp-Taskflow</title>
      <link>https://tsung-wei-huang.github.io/project/cpp-taskflow/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 -0600</pubDate>
      
      <guid>https://tsung-wei-huang.github.io/project/cpp-taskflow/</guid>
      <description>A fast C++ header-only library to help you quickly write parallel programs with complex task dependencies
The Era of Parallel Computing The evolution of computer architectures is moving toward multicore designs. It is common to find multiprocessor systems in today&amp;rsquo;s electronic products such as mobiles, laptops, desktops, and servers. In order to keep up with the performance scaling, it is becoming necessary for software developers to write parallel programs that utilize the number of available cores.</description>
    </item>
    
    <item>
      <title>DtCraft</title>
      <link>https://tsung-wei-huang.github.io/project/dtcraft/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 -0600</pubDate>
      
      <guid>https://tsung-wei-huang.github.io/project/dtcraft/</guid>
      <description>A general-purpose distributed programming system using data-parallel streams.
New Distributed Programming Model DtCraft offers a new powerful programming model called stream graph to streamline the creation of distributed workloads. Users can focus on high-level developments using our models, leaving difficult concurrency details such as workload distribution and process communication to our system kernel.
There are myriads of cluster computing frameworks such as Hadoop MapReduce, Apache Spark, Dryad, and Ray. Each has its reason to exist.</description>
    </item>
    
    <item>
      <title>Cpp-Taskflow: Fast Task-based Parallel Programming using Modern C&#43;&#43;</title>
      <link>https://tsung-wei-huang.github.io/publication/ipdps19/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 -0600</pubDate>
      
      <guid>https://tsung-wei-huang.github.io/publication/ipdps19/</guid>
      <description></description>
    </item>
    
    <item>
      <title>OpenTimer: A High-Performance Timing Analysis Tool</title>
      <link>https://tsung-wei-huang.github.io/publication/iccad15/</link>
      <pubDate>Mon, 02 Nov 2015 00:00:00 -0600</pubDate>
      
      <guid>https://tsung-wei-huang.github.io/publication/iccad15/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>